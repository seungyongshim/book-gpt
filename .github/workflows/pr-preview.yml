name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: pr-preview-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  # Clean up when PR is closed
  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR about cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            
            const body = `## 🧹 Preview Deployment Cleaned Up
            
            The preview deployment for this PR has been cleaned up.
            
            **📝 PR Number:** #${prNumber}
            **📋 Status:** Closed and cleaned up
            
            > **Note:** Main deployment at https://seungyongshim.github.io/book-gpt/ remains unchanged.`;
            
            // Check if we already have a preview comment to update
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🚀 Preview Deployment')
            );
            
            if (botComment) {
              // Update existing comment to show cleanup
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            }

  # Build and deploy preview for open PRs using Netlify
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build with PR-specific base path
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          PR_NUMBER: ${{ github.event.number }}
        run: npm run build

      - name: Upload preview build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-${{ github.event.number }}-preview
          path: dist/
          retention-days: 30

      - name: Comment on PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            const commitSha = context.payload.pull_request.head.sha.substring(0, 7);
            const runId = context.runId;
            const artifactUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`;
            
            const body = `## 🚀 Preview Build Ready
            
            Your PR has been built with preview-specific routing!
            
            **📦 Download Preview:** [pr-${prNumber}-preview](${artifactUrl}) (GitHub artifact)
            **📝 PR Number:** #${prNumber}
            **🔗 Commit:** \`${commitSha}\`
            **🛠️ Base Path:** \`/book-gpt/pr-${prNumber}/\`
            
            ### To view the preview:
            1. 📥 [Download the artifact](${artifactUrl}) from the workflow run
            2. 📂 Extract the zip file
            3. 🌐 Serve the files locally (e.g., \`npx serve dist\`)
            4. 🔗 Open in browser with the PR-specific base path
            
            > **Note:** For live URL previews, configure Netlify or similar service with the repository secrets.
            > The build uses PR-specific paths and will work correctly when deployed to any hosting service.
            
            ### Build verification:
            - ✅ PR-specific base path: \`/book-gpt/pr-${prNumber}/\`
            - ✅ All assets use correct paths
            - ✅ Ready for deployment to preview service`;
            
            // Check if we already commented
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🚀 Preview')
            );
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body
              });
            }